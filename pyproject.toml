[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "asyncpgx"
version = "1.5.0"
description = "User-friendly extensions for asyncpg"
authors = ["Vladislav Laukhin <laukhin97@gmail.com>"]
readme = "README.md"
homepage = "https://github.com/laukhin/asyncpgx"
repository = "https://github.com/laukhin/asyncpgx"
documentation = "https://laukhin.github.io/asyncpgx/index.html"
license = "Apache-2.0"
keywords = ["postgresql", "asyncio", "asyncpg"]

[tool.poetry.dependencies]
python = ">=3.7.2,<3.12"
asyncpg = ">=0.21,<0.28"

[tool.poetry.dev-dependencies]
pylint = "^2.17.2"
mypy = "^1.3"
docformatter = "^1.7"
pytest = "^7.2.0"
pytest-cov = "^4.0.0"
pytest-asyncio = "^0.20.3"
sphinx = "^5.3.0"
sphinx-rtd-theme = "^1.1.0"

[tool.black]
line-length = 120
target-version = ["py38"]
include = '\.pyi?$'
skip-string-normalization = true
exclude = '''
(
  /(
    | \.git
    | \.mypy_cache
  )/
)
'''

[tool.poetry.extras]
format = ["black", "isort"]

[tool.isort]
line_length = 120
sections = ['FUTURE', 'STDLIB', 'THIRDPARTY', 'FIRSTPARTY', 'LOCALFOLDER']
no_lines_before = ['STDLIB', 'LOCALFOLDER']
known_third_party = [
    'pytest',
]
known_local_folder = []
multi_line_output = 3
lines_after_imports = 2

[tool.mypy]
python_version = 3.7
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true
strict_optional = true
allow_redefinition = true
disallow_incomplete_defs = true

[tool.pylint.format]
max-line-length = 120

[tool.pylint.master]
extension-pkg-whitelist = ['pydantic', 'asyncpg']

[tool.pylint.messages_control]
disable = [
    'no-self-use',
]
